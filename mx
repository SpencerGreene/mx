#!/usr/bin/python
#

debug = 1

SGWs = {
    "pphosted"    : "ProofPoint",
    "ppehosted"   : "ProofPoint",
    "ppe-hosted"  : "ProofPoint",
    "messagelabs" : "MessageLabs",
    "MessageLabs" : "MessageLabs",
    "mimecast"    : "Mimecast",
    "iphmx"       : "Cisco",
    "trendmicro"  : "Trend Micro",
    "snwlhosted"  : "Sonic Wall",
    "mailcontrol" : "Forcepoint",
    "barracuda"   : "Barracuda",
    "markmonitor" : "MarkMonitor",
    "ctmail"      : "Cyren Web Security",
    "cscdns"      : "CSC Global",
    "fireeye"     : "FireEye",
    "spamexperts" : "SpamExperts / SolarWinds",
    "securence"   : "Securence",
    "carrierzone" : "Carrier Zone"
}

MGWs = {
    "outlook"     : "Office365",
    "sherweb"     : "Office365",
    "google"      : "Google",
    "GOOGLE"      : "Google",
    "psmtp"       : "Google",
    "zoho"        : "Zoho",
    "secureserver": "GoDaddy",
    "emailsrvr"   : "emailsrvr.com",
    "yahoodns"    : "Yahoo!",
    "fortimail"   : "Fortinet",
    "1and1"       : "1and1",
    "juno"        : "Juno",
    "hostinger"   : "Hostinger",
    "b-io.co"     : "Return Path",
    "safesecureweb" : "SmarterTools"
}

TLDs = [ ".com", ".co.jp", ".com.au", ".co.uk", ".com.cn", ".ru", ".org", ".net" ]

import dns.resolver
import sys
import fileinput
import re

def parse_stdin_csv():
    result = []
    for line in fileinput.input():
        words = line.rstrip("\r\n").split(',')
        result.append([words[1], words[2], words[5]])
    return result

def print_record(company, domain, sgw, mgw, mx):
    print "#, ", company, ",", domain, ",", sgw, ",", mgw, ",", mx

if len(sys.argv) > 1:
    records = [ ["", d] for d in sys.argv[1:]]
else:
    records = parse_stdin_csv()

def find_gateway(mx, gateway_dict):
    for hostname in gateway_dict:
        if hostname in mx:
            return gateway_dict[hostname]
    return ""

def base_of(domain):
    result = domain
    for tld in TLDs:
        if result[-len(tld):] == tld:
            result = result[:-len(tld)]
    return result

# begin
print_record("Company", "Domain", "SecurityGateway", "Mail Domain", "MX")

for record in records:
    company = record[0]
    domain = record[1]
    old_mx = record[2]
    answers = []

    base_domain = base_of(domain)

    try:
        answers = dns.resolver.query(domain, 'MX')
    except:
        print >> sys.stderr, "I couldn't find " + domain
        print_record(company, base_domain, "", "", "")
        # print base_domain, ", , , NO MX RECORD"

    if len(answers):
        shortest = answers[0]
        for rdata in answers[1:]:
            if rdata.preference < shortest.preference:
                shortest = rdata

        mx = str(shortest.exchange)[:-1]
        base_mx = mx[:-4]

        sgw = find_gateway(mx, SGWs)
        if sgw > "":
            interpreted = "unknown"
        else:
            interpreted = find_gateway(mx, MGWs)

        if interpreted == "" and base_domain in base_mx:
            interpreted = "own-domain"

        # print base_domain, ",", sgw, ",", interpreted, ",", mx
        print_record(company, domain, sgw, interpreted, mx)
